:root {
    --boxColor: rgba(0, 191, 255, .5);
    --rotateSpeed: 30s;
}
body {
    background-color: black;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 50px; /* font size is interesting here. I am using it without text specifically to use it as an easily scalable unit to design the box. */
    perspective: 10em; /* perspective is setting the viewing distance. Anything below 4 causes pretty serious distorion of the image from this perspective origin */
    perspective-origin: 50% calc(50% - 2em);
}
@keyframes roomSpin {
    to {
        transform: rotateY(360deg);

}
    
}
.scene {
    position: relative;
    transform-style: preserve-3d;
    animation: roomSpin var(--rotateSpeed) infinite linear;
    -webkit-animation: roomSpin var(--rotateSpeed) infinite linear;
    
    
    
    @-moz-keyframes roomSpin { 
        to { 
            transform: rotateY(360deg); 
            }        
        }
        
    
    }



.ball {
    width: 1em;
    height: 1em;
    border-radius: 50%;
    background: lightgreen;
    position: absolute;
    left: -.5em;
    bottom: 1em;
    background-image: radial-gradient( circle at top, lightgreen, 30%, #000);

}

.ballShadow {
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 191, 255, .5);
    background-image: radial-gradient(#0007, #0000 50%);
}

.cube {
    width: 2em;
    height: 2em;
    position: absolute;
    transform-style: preserve-3d;
    top: -1em;
    left: -1em;
          
}
/* it is probably too inside baseball to ask. But the guide I'm learning from had these classes imbedded within the above rule and vscode did not like it at all. I tried fiddling with it and couldn't get it to work at all. So I had to remove it out and make it a separate rule and this seems to be working fine but I'd like to know why there is a difference? It appears they are using an SCSS file. Should I be doing that instead? */
.right, .left, .front, .back {
    position: absolute;
    width: 100%;
    height: 100%;
    background: var( --boxColor);
    box-shadow: 0 0 0.5em #000a inset;
    
}
.front { 
    transform: translateZ(1em);
}
.left {
    transform: rotateY(90deg) translateZ(1em);
}
.right {
    transform: rotateY(-90deg) translateZ(1em);
}
.back {
    transform: translateZ(-1em);
}
.top {
    position: absolute;
    width: 2em;
    height: 2em;
    background: var(--boxColor);
    transform: translateY(-50%) rotateX(90deg);
}

.bottom {
    position: absolute;
    width: 2em;
    height: 2em;
    background: #0007;
    bottom: 0; 
    transform: translateY(50%) rotateX(90deg);
    box-shadow: 0 0 0.5em #000;
}


.floor {
    top: 1em;
    transform: translate(-50%, -50%) rotateX(90deg);  /* this part is cool. takes the gradiant and turns it on its side. without additional code it looks like it disappears but actually is just a 2d image rotated into the third dimension */
    width: 5em;
    height: 5em;
    background-image: radial-gradient(#0000, #000 75%), repeating-conic-gradient(from 45deg, #111 0deg 90deg, #222 90deg 180deg);
    background-size: 100%, 1em 1em;
    position: absolute;
}
