:root {
  --boxColor: hsla(195, 100%, 50%, 0.5);
  --rotateSpeed: 30s;
  --bounceSpeed: 1.5s;
}

body {
  background-color: hsl(0, 0%, 0%);
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  font-size: 50px; /* font size is interesting here. I am using it without text specifically to use it as an easily scalable unit to design the box. */
  perspective: 15em; /* perspective is setting the viewing distance. Anything below 4 causes pretty serious distorion of the image from this perspective origin */
  perspective-origin: 50% calc(50% - 2em);
}

/* Classes */
.scene {
  position: relative;
  transform-style: preserve-3d;
  animation: roomSpin var(--rotateSpeed) infinite linear;
  -webkit-animation: roomSpin var(--rotateSpeed) infinite linear;
}

@keyframes roomSpin {
  to {
    transform: rotateY(360deg);
  }
}

.ball {
  width: 1em;
  height: 1em;
  border-radius: 50%;
  background: lightgreen;
  position: absolute;
  left: -0.5em;
  bottom: 1em;
  background-image: radial-gradient(
    circle at top,
    hsl(120, 73%, 75%),
    30%,
    hsl(0, 0%, 0%)
  );
  animation: ballSpin var(--rotateSpeed) infinite linear reverse,
    ballBounce var(--bounceSpeed) infinite ease-out;
  -webkit-animation: ballSpin var(--rotateSpeed) infinite linear reverse,
    ballBounce var(--bounceSpeed) infinite ease-out;
}

@keyframes ballSpin {
  to {
    transform: rotateY(360deg);
  }
}

@keyframes ballBounce {
  0%,
  100% {
    bottom: 0.5em;
  }
  50% {
    bottom: 3em;
    animation-timing-function: ease-in;
  }
}

.ballShadow {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: radial-gradient(
    hsla(0, 0%, 0%, 0.467),
    hsla(0, 0%, 0%, 0) 50%
  );
  animation: ballShadow var(--bounceSpeed) infinite ease-out;
  -webkit-animation: ballShadow var(--bounceSpeed) infinite ease-out;
}

@keyframes ballShadow {
  0%,
  8%,
  93.5%,
  100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(2);
    animation-timing-function: ease-in;
    opacity: 0.5;
  }
}

.cube {
  width: 2em;
  height: 2em;
  position: absolute;
  transform-style: preserve-3d;
  bottom: -0.99em;
  left: -1em;
  animation: cubeSquish var(--bounceSpeed) infinite linear;
}

@keyframes cubeSquish {
  0%,
  100% {
    height: 1.5em;
  }
  8%,
  93.5% {
    height: 2em;
  }
}

/* it is probably too inside baseball to ask. But the guide I'm learning from had these classes imbedded within the above rule and vscode did not like it at all. I tried fiddling with it and couldn't get it to work at all. So I had to remove it out and make it a separate rule and this seems to be working fine but I'd like to know why there is a difference? It appears they are using an SCSS file. Should I be doing that instead? */
.right,
.left,
.front,
.back {
  position: absolute;
  width: 100%;
  height: 100%;
  background: var(--boxColor);
  box-shadow: 0 0 0.5em hsla(0, 0%, 0%, 0.667) inset;
}

.front {
  transform: translateZ(1em);
}

.left {
  transform: rotateY(90deg) translateZ(1em);
}

.right {
  transform: rotateY(-90deg) translateZ(1em);
}

.back {
  transform: translateZ(-1em);
}

.top {
  position: absolute;
  width: 2em;
  height: 2em;
  background: var(--boxColor);
  transform: translateY(-50%) rotateX(90deg);
}

.bottom {
  position: absolute;
  width: 2em;
  height: 2em;
  background: #0007;
  bottom: 0;
  transform: translateY(50%) rotateX(90deg);
  box-shadow: 0 0 0.5em #000;
}

.floor {
  top: 1em;
  transform: translate(-50%, -50%) rotateX(90deg); /* this part is cool. takes the gradiant and turns it on its side. without additional code it looks like it disappears but actually is just a 2d image rotated into the third dimension */
  width: 5em;
  height: 5em;
  background-image: radial-gradient(hsla(0, 0%, 0%, 0), hsl(0, 0%, 0%) 75%),
    repeating-conic-gradient(
      from 45deg,
      hsl(0, 0%, 7%) 0deg 90deg,
      hsl(0, 0%, 57%) 90deg 180deg
    );
  background-size: 100%, 1em 1em;
  position: absolute;
}
